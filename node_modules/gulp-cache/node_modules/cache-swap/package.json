{
  "name": "cache-swap",
  "version": "0.2.0",
  "description": "A simple temp file based swap for speeding up operations",
  "files": [
    "index.js"
  ],
  "scripts": {
    "pretest": "jscs *.js && eslint *.js",
    "test": "mocha test.js",
    "test-dot": "mocha test.js --reporter dot",
    "coverage": "istanbul cover _mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jgable/cache-swap"
  },
  "keywords": [
    "cache",
    "swap",
    "temp",
    "file"
  ],
  "author": {
    "name": "Jacob Gable",
    "email": "jacob.gable@gmail.com"
  },
  "contributors": [
    {
      "name": "Shinnosuke Watanabe",
      "email": "snnskwtnb@gmail.com",
      "url": "https://github.com/shinnn"
    }
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jgable/cache-swap/blob/master/LICENSE"
    }
  ],
  "dependencies": {
    "graceful-fs": "^3.0.5",
    "mkdirp": "^0.5.0",
    "object-assign": "^2.0.0",
    "rimraf": "^2.2.8"
  },
  "devDependencies": {
    "eslint": "^0.14.1",
    "istanbul": "^0.3.6",
    "jscs": "^1.11.3",
    "mocha": "^2.1.0",
    "should": "^5.0.1"
  },
  "jscsConfig": {
    "preset": "google",
    "disallowMultipleVarDecl": null,
    "maximumLineLength": 98,
    "requireBlocksOnNewline": true,
    "validateLineBreaks": "LF"
  },
  "readme": "# cache-swap\n\n[![NPM version](http://img.shields.io/npm/v/cache-swap.svg)](https://www.npmjs.com/package/cache-swap)\n[![Build status](https://ci.appveyor.com/api/projects/status/98uvrob6ogl7noey?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/cache-swap)\n[![Dependency Status](https://img.shields.io/david/jgable/cache-swap.svg?label=deps)](https://david-dm.org/jgable/cache-swap)\n[![devDependency Status](https://img.shields.io/david/dev/jgable/cache-swap.svg?label=devDeps)](https://david-dm.org/jgable/cache-swap#info=devDependencies)\n\nA lightweight file swap cache backed by temp files.\n\n## Example\n\n```javascript\nvar swap = new CacheSwap({\n    cacheDirName: \"HoganizeSwap\"\n  }),\n  processTemplate = function(template, done) {\n    var templateStr = template.content,\n      templatePath = template.path,\n      templateHash = files.shaIt(templateStr);\n\n    swap.getCached(\"hoganize\", templateHash, function(err, cached) {\n      if(err) {\n        return done(err);\n      }\n\n      var yeahbrotha,\n        stringed;\n\n      if(cached) {\n        yeahbrotha = cached.contents;\n        try {\n          addToHoganized(yeahbrotha, templatePath);\n        } catch(e){\n          return done(e);\n        }\n\n        done();\n      } else {\n        yeahbrotha = self._compileTemplate(templateStr, templatePath);\n        // Add the compiled template to the cache swap for next time.\n        swap.addCached(\"hoganize\", templateHash, yeahbrotha, function(err) {\n          if(err) {\n            return done(err);\n          }\n\n          try {\n            addToHoganized(yeahbrotha, templatePath);\n          } catch(e) {\n            return done(e);\n          }\n\n          done();\n        });\n      }\n\n    });\n  };\n```\n\n## License\n\nLicensed under the MIT License, Copyright 2013-2015 Jacob Gable\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jgable/cache-swap/issues"
  },
  "homepage": "https://github.com/jgable/cache-swap",
  "_id": "cache-swap@0.2.0",
  "_shasum": "46ccee44df5c1862be4cf81668059acbc11369ea",
  "_from": "cache-swap@^0.2.0",
  "_resolved": "https://registry.npmjs.org/cache-swap/-/cache-swap-0.2.0.tgz"
}
